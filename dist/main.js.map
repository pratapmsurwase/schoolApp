{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/student/studentdata/studentdata.component.css","webpack:///./src/app/student/studentdata/studentdata.component.html","webpack:///./src/app/student/studentdata/studentdata.component.ts","webpack:///./src/app/user/sign-in/sign-in.component.css","webpack:///./src/app/user/sign-in/sign-in.component.html","webpack:///./src/app/user/sign-in/sign-in.component.ts","webpack:///./src/app/user/sign-up/sign-up.component.css","webpack:///./src/app/user/sign-up/sign-up.component.html","webpack:///./src/app/user/sign-up/sign-up.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/userprofile/userprofile.component.css","webpack:///./src/app/userprofile/userprofile.component.html","webpack:///./src/app/userprofile/userprofile.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACqB;AACf;AACO;AACa;AACQ;AAC5B;AACV;AACe;AACuB;AACR;AACxB;AACc;AACyB;AA0BlF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAxBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;gBACb,+EAAe;gBACf,wFAAoB;gBACpB,gFAAe;gBACf,gGAAoB;aACrB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,kEAAmB;gBACnB,qEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAAC,iDAAS,CAAC;gBAC/B,qEAAgB;aAEjB;YACD,SAAS,EAAG,CAAC,EAAC,OAAO,EAAE,sEAAiB;oBAC3B,QAAQ,EAAE,uEAAe;oBACvB,KAAK,EAAE,IAAI,EAAE;gBACZ,2DAAS,EAAE,gEAAW,CAAC;YACvC,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCqB;AACwD;AAE9C;AAKrD;IAEE,mBAAoB,WAAuB,EAAU,MAAa;QAA9C,gBAAW,GAAX,WAAW,CAAY;QAAU,WAAM,GAAN,MAAM,CAAO;IAAG,CAAC;IAEtE,+BAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QAC1B,EAAE,EAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAbU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGgC,gEAAW,EAAiB,sDAAM;OAFvD,SAAS,CAcrB;IAAD,gBAAC;CAAA;AAdqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPqB;AACN;AACgB;AACZ;AAKzC;IACI,yBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAK,CAAC;IAE1E,mCAAS,GAAT,UAAU,GAAqB,EAAE,IAAgB;QAAjD,iBAmBC;QAlBE,EAAE,EAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC7B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,CAAC,CAAC;YACF,IAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;gBAC7B,OAAO,EAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;aACjF,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAC9B,0DAAG,CACC,eAAK,IAAK,CAAC,EACX,aAAG;gBACJ,EAAE,EAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC;oBACzB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACxC,CAAC;YACA,CAAC,CACJ,CACJ;QACL,CAAC;IAEF,CAAC;IAtBQ,eAAe;QAF3B,gEAAU,EAAE;yCAGwB,gEAAW,EAAkB,sDAAM;OAD3D,eAAe,CAuB3B;IAAD,sBAAC;CAAA;AAvB2B;;;;;;;;;;;;;ACR5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACa;AACQ;AACR;AACrB;AACoC;AAE3E,IAAM,SAAS,GAAW;IAC7B;QACA,IAAI,EAAE,QAAQ,EAAG,SAAS,EAAE,kEAAa;QACzC,QAAQ,EAAE,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,SAAS,EAAC,+EAAe,EAAC,CAAC;KAC/C;IACD;QACI,IAAI,EAAE,OAAO,EAAE,SAAS,EAAC,kEAAa;QACtC,QAAQ,EAAC,CAAC,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+EAAe,EAAC,CAAC;KACpD;IACD;QACI,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,uFAAoB,EAAE,WAAW,EAAC,CAAC,0DAAS,CAAC;KAC/E;IACD,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAC,+FAAoB,EAAE;IACvD;QACA,IAAI,EAAE,EAAE,EAAE,UAAU,EAAC,QAAQ,EAAE,SAAS,EAAC,MAAM;KAC9C;CAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzB0C;AAEoB;AACJ;AAK3D;IAeE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAZpC,iBAAY,GAAS;YACnB,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,GAAG,EAAE,EAAE;YACP,OAAO,EAAG,EAAE;YACZ,YAAY,EAAG,EAAE;YACjB,YAAY,EAAG,EAAE;SAElB;QAED,gBAAW,GAAG,EAAC,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,QAAQ,EAAG,MAAM,EAAI,CAAC,EAAG;IAC1B,CAAC;IAE1C,cAAc;IACf,8BAAQ,GAAR,UAAS,IAAU;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wEAAW,CAAC,UAAU,GAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC;IACnF,CAAC;IAED,2BAAK,GAAL,UAAM,eAAe;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wEAAW,CAAC,UAAU,GAAG,eAAe,EAAE,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC;IACpG,CAAC;IAED,oCAAc,GAAd;QACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wEAAW,CAAC,UAAU,GAAI,cAAc,CAAC;IAChE,CAAC;IAGD,gBAAgB;IACf,8BAAQ,GAAR,UAAS,KAAa;QACvB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;IACnC,CAAC;IAEF,8BAAQ,GAAR;QACE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;IACtC,CAAC;IAED,gCAAU,GAAV;QACE,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC;IAClC,CAAC;IAED,oCAAc,GAAd;QACE,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE;QAC3B,EAAE,EAAC,KAAK,CAAC,CAAC,CAAC;YACT,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;QAChC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,gCAAU,GAAV;QACE,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE;QACvC,EAAE,EAAC,WAAW,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;QAC1C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,KAAK;QACP,CAAC;IACH,CAAC;IA7DS,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAgB0B,+DAAU;OAfzB,WAAW,CAkEvB;IAAD,kBAAC;CAAA;AAlEuB;;;;;;;;;;;;ACRxB,mB;;;;;;;;;;;ACAA,yMAAyM,WAAW,6NAA6N,8BAA8B,4CAA4C,mCAAmC,gDAAgD,iCAAiC,8CAA8C,iCAAiC,wK;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5oB;AACQ;AACjB;AAOzC;IAEE,8BAAoB,IAAgB,EAAW,MAAa;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAW,WAAM,GAAN,MAAM,CAAO;IAAK,CAAC;IAElE,uCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,SAAS,CAClC,aAAG;YACD,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC;QAClC,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CACF;IACH,CAAC;IAED,uCAAQ,GAAR;QACE,0BAA0B;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;IACxC,CAAC;IAlBU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAGyB,uEAAW,EAAkB,sDAAM;OAFjD,oBAAoB,CAoBhC;IAAD,2BAAC;CAAA;AApBgC;;;;;;;;;;;;ACTjC,mB;;;;;;;;;;;ACAA,sCAAsC,UAAU,qSAAqS,yDAAyD,wUAAwU,4DAA4D,+SAA+S,qBAAqB,S;;;;;;;;;;;;;;;;;;;;;;;;;;ACApiC;AAEQ;AACjB;AAOzC;IAIE,yBAAoB,WAAuB,EAAU,MAAc;QAA/C,gBAAW,GAAX,WAAW,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFnE,aAAQ,GAAG,kDAAkD,CAAC;QAG9D,UAAK,GAAG;YACN,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb;QAED,eAAU,GAAG,yJAAyJ,CAAC;IANhG,CAAC;IAQxE,kCAAQ,GAAR,cAAa,CAAC;IACf,kCAAQ,GAAR,UAAS,IAAY;QAArB,iBAUC;QATF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC1C,aAAG;YACD,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACvC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC5C,CAAC,EACD,aAAG;YACD,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO;QAC9C,CAAC,CACA;IACF,CAAC;IAvBW,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAKgC,uEAAW,EAAkB,sDAAM;OAJxD,eAAe,CAwB3B;IAAD,sBAAC;CAAA;AAxB2B;;;;;;;;;;;;ACV5B,mB;;;;;;;;;;;ACAA,+WAA+W,2DAA2D,uUAAuU,wDAAwD,scAAsc,4DAA4D,ocAAoc,sDAAsD,kOAAkO,0DAA0D,8PAA8P,gEAAgE,kQAAkQ,gEAAgE,kVAAkV,qBAAqB,sB;;;;;;;;;;;;;;;;;;;;;;;;;ACAt/F;AAEQ;AAO1D;IAIE,yBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAD3C,eAAU,GAAG,yJAAyJ,CAAC;IACxH,CAAC;IAEjD,kCAAQ,GAAR,cAAa,CAAC;IAEd,kCAAQ,GAAR,UAAS,IAAY;QAArB,iBAmBM;QAlBN,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC7C,aAAG;YAEC,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,UAAU,CAAC,cAAM,YAAI,CAAC,kBAAkB,GAAG,KAAK,EAA/B,CAA+B,EAAE,IAAI,CAAC;YACzD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAGtB,CAAC,EACD,aAAG;YACH,EAAE,EAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,mBAAmB,GAAG,gCAAgC;gBAC1D,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;YACrD,CAAC;YACD,SAAS;YACT,oDAAoD;QAEpD,CAAC,CACF;IAAI,CAAC;IAEN,mCAAS,GAAT,UAAU,IAAY;QACtB,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG;YAC9B,QAAQ,EAAE,EAAE;YACV,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,GAAG,EAAE,EAAE;YACT,OAAO,EAAG,EAAE;YACd,YAAY,EAAG,EAAE;YACjB,YAAY,EAAG,EAAE;SAEhB;QACD,IAAI,CAAC,SAAS,EAAE;QAChB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAC9B,CAAC;IA1CU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAKiC,uEAAW;OAJjC,eAAe,CA6C3B;IAAD,sBAAC;CAAA;AA7C2B;;;;;;;;;;;;ACT5B,mB;;;;;;;;;;;ACAA,uU;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IAEA,CAAC;IANU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAQzB;IAAD,oBAAC;CAAA;AARyB;;;;;;;;;;;;ACP1B,mB;;;;;;;;;;;ACAA,sMAAsM,WAAW,8PAA8P,oCAAoC,kDAAkD,oCAAoC,0CAA0C,mBAAmB,sDAAsD,iBAAiB,wDAAwD,qBAAqB,4EAA4E,0BAA0B,qFAAqF,0BAA0B,kL;;;;;;;;;;;;;;;;;;;;;;;;;;ACA77B;AACG;AACZ;AAOzC;IAEE,8BAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEjE,uCAAQ,GAAR;QAAA,iBASE;QARA,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,SAAS,CAClC,aAAG;YACD,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC;QAChC,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CACF;IACF,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAlBS,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAGyB,gEAAW,EAAkB,sDAAM;OAFjD,oBAAoB,CAoBhC;IAAD,2BAAC;CAAA;AApBgC;;;;;;;;;;;;;ACTjC;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,UAAU,EAAC,2BAA2B;CACvC,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport{FormsModule, ReactiveFormsModule} from '@angular/forms'\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { appRoutes } from './routes';\nimport { UserService } from './shared/user.service';\nimport { UserprofileComponent } from './userprofile/userprofile.component';\nimport { SignInComponent } from './user/sign-in/sign-in.component';\nimport {AuthGuard} from './auth/auth.guard'\nimport{ AuthInterceptor } from './auth/auth.interceptor';\nimport { StudentdataComponent } from './student/studentdata/studentdata.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    SignUpComponent,\n    UserprofileComponent,\n    SignInComponent,\n    StudentdataComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule\n    \n  ],\n  providers:  [{provide: HTTP_INTERCEPTORS,\n               useClass: AuthInterceptor,\n                 multi: true },\n                  AuthGuard, UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../shared/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private userservice:UserService, private router:Router) {}  \n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    if(!this.userservice.isLoggedIn()) {\n      this.router.navigateByUrl('/login');\n      this.userservice.delteToken();\n      return false;\n    }\n    return true;\n  }\n}\n","import{HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { tap } from 'rxjs/operators';\r\nimport { UserService } from \"../shared/user.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n@Injectable()\r\n\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private userService: UserService, private router: Router  ) {}\r\n\r\n    intercept(req: HttpRequest<any>, next:HttpHandler  ) {\r\n       if(req.headers.get('noauth'))\r\n       return next.handle(req.clone())\r\n     else {\r\n         const clonederq = req.clone({\r\n        headers : req.headers.set(\"Authorization\", \"Bearer \" + this.userService.getToken())   \r\n         })\r\n         return next.handle(clonederq).pipe(\r\n             tap(\r\n                 event => {} ,\r\n                 err => {\r\n                if(err.error.auth == false) {\r\n                    this.router.navigateByUrl('/login');   \r\n                }\r\n                 }\r\n             )\r\n         )\r\n     }       \r\n\r\n    }\r\n}","import{Routes } from '@angular/router'\r\nimport { UserComponent } from \"./user/user.component\";\r\nimport { SignUpComponent } from \"./user/sign-up/sign-up.component\";\r\nimport { UserprofileComponent } from './userprofile/userprofile.component';\r\nimport { SignInComponent } from './user/sign-in/sign-in.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { StudentdataComponent } from './student/studentdata/studentdata.component'\r\n\r\nexport const appRoutes: Routes = [\r\n    {\r\n    path: 'signup',  component: UserComponent,\r\n    children: [{path:'', component:SignUpComponent}]\r\n    },\r\n    {\r\n        path: 'login', component:UserComponent,\r\n        children:[{path: '', component: SignInComponent}]\r\n    },\r\n    {\r\n        path: 'userprofile', component: UserprofileComponent, canActivate:[AuthGuard] \r\n     },\r\n     {path: 'studentdata', component:StudentdataComponent },\r\n    {\r\n    path: '', redirectTo:'/login', pathMatch:'full'\r\n    },\r\n    \r\n]","import { Injectable } from '@angular/core';\nimport { User} from './user.model'\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {  \n  \n\n  selectedUser: User = {\n    fullName: '',\n    email: '',\n    password: '',\n    DOB: '',\n    Address : '',\n    ParentPhone1 : '',\n    ParentPhone2 : '',\n        \n  } \n  \n  noAutheader = {headers: new HttpHeaders({ 'NoAuth' : 'True'   })  }\n  constructor(private http: HttpClient ) { } \n\n  //HTTP methods\n postUser(user: User) {\n   return this.http.post(environment.apiBaseUrl+'/register', user, this.noAutheader)\n }\n\n login(authCredentials) {\n   return this.http.post(environment.apiBaseUrl + '/authenticate', authCredentials, this.noAutheader)\n }\n\n getUserProfile( ) {\n  return this.http.get(environment.apiBaseUrl +  '/userprofile')\n}\n\n\n//Helper Methods\n setToken(token: string) {\nlocalStorage.setItem('token', token)\n }\n\ngetToken() {\n  return localStorage.getItem('token')\n}\n\ndelteToken() {\n  localStorage.removeItem('token')\n}\n\ngetUserPayload() {\n  var token = this.getToken()\n  if(token) {\n    var userPayload = atob(token.split('.')[1])\n    return JSON.parse(userPayload)\n  } else {\n    return null; \n  }\n} \n\nisLoggedIn() {\n  var userPayload = this.getUserPayload()\n  if(userPayload) {\n    return userPayload.exp > Date.now() / 1000;\n     } else {\n       false\n     }\n   }\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<table *ngIf = \\\"studentDetail\\\" class=\\\"table-fill\\\" >\\n  <!-- <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a [routerLink]=\\\"['/studentdata']\\\">Studnet Data</a></li>\\n     </ul> -->\\n<thead>\\n<tr>\\n  <th colspan=\\\"2\\\" class=\\\"text-center\\\" >User Profile</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td> Creation Date  </td>\\n<td>{{studentDetail.CreationDateAt}}</td>\\n</tr>\\n<tr>\\n<td>English</td>\\n<td>{{studentDetail.studentData.English}}</td>\\n</tr>\\n<tr>\\n<td>Mathamatics</td>\\n<td>{{studentDetail.studentData.Matha}}</td>\\n</tr>\\n<tr>\\n  <td>Hindi</td>\\n  <td>{{studentDetail.studentData.Hindi}}</td>\\n  </tr>\\n<tr>\\n<td colspan=\\\"2\\\" class=\\\"text-center\\\"  >\\n<input type=\\\"button\\\" (click) =\\\"onLogout()\\\" value=\\\"Back\\\"/>\\n</td>\\n</tr>\\n</tbody>\\n\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/shared/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-studentdata',\r\n  templateUrl: './studentdata.component.html',\r\n  styleUrls: ['./studentdata.component.css']\r\n})\r\nexport class StudentdataComponent implements OnInit {\r\n  studentDetail\r\n  constructor(private user:UserService , private router:Router ) { }\r\n\r\n  ngOnInit() { \r\n    this.user.getUserProfile().subscribe(\r\n      res => {\r\n        this.studentDetail = res['user']\r\n      },\r\n      err => {\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n\r\n  onLogout() {\r\n    // this.user.delteToken();\r\n    this.router.navigate(['/userprofile'])\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\n  <img src={{imageadd}}  id=\\\"icon\\\" alt=\\\"User Icon\\\"/>\\n</div>\\n<form #signInForm=\\\"ngForm\\\" (ngSubmit)=\\\"signInForm.valid && onSubmit(signInForm)\\\">\\n    <input type=\\\"text\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"model.email\\\" placeholder=\\\"Email\\\" [pattern]=\\\"emailRegex\\\" required\\n      [ngClass]=\\\"{'invalid-textbox' :signInForm.submitted && !email.valid }\\\">\\n    <div *ngIf=\\\"signInForm.submitted && email.errors?.pattern\\\">\\n      <label class=\\\"validation-message\\\">Invalid email address.</label>\\n    </div>\\n    <input type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"model.password\\\" placeholder=\\\"Password\\\" required minlength=\\\"4\\\"\\n      [ngClass]=\\\"{'invalid-textbox' :signInForm.submitted && !password.valid }\\\">\\n    <div *ngIf=\\\"signInForm.submitted && password.errors?.minlength\\\">\\n      <label class=\\\"validation-message\\\">Minimum 4 characters.</label>\\n    </div>\\n    <input type=\\\"submit\\\" value=\\\"Sign In\\\">\\n</form>\\n\\n<!-- Error message -->\\n<div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\n    {{serverErrorMessages}}\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/shared/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n\n  imageadd = 'http://hyperxchange.com/Inventory/User_login.png';\n  serverErrorMessages: String\n  constructor(private userService:UserService, private router: Router) { } \n  model = {\n    email: '',\n    passowrd: ''\n  }\n  \n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  ngOnInit() { }\n onSubmit(form: NgForm) {\nthis.userService.login(form.value).subscribe( \n  res=> {\n    this.userService.setToken(res['token'])\n    this.router.navigateByUrl('/userprofile');\n  },\n  err => {\n    this.serverErrorMessages = err.error.message\n  }\n  )\n }\n}\n","module.exports = \"\"","module.exports = \"<!-- <div>\\n  <img src=\\\"/assets/image/user.JPG\\\" id=\\\"icon\\\" alt=\\\"User Icon\\\"/>\\n</div> -->\\n\\n<form #signUpForm=\\\"ngForm\\\" (ngSubmit)=\\\"signUpForm.valid && onSubmit(signUpForm)\\\">\\n<input type=\\\"text\\\" #fullName=\\\"ngModel\\\" [(ngModel)] = \\\"userService.selectedUser.fullName\\\" name=\\\"fullName\\\" placeholder=\\\"fulll Name\\\"\\n required [ngClass] =\\\"{'invalid-textbox' :signUpForm.submitted && !fullName.valid}\\\" >\\n<div *ngIf=\\\"signUpForm.submitted && !fullName.valid\\\" >\\n<label class=\\\"Validators.required\\\">This Field is Required</label>\\n</div>\\n<input type=\\\"text\\\"  #email=\\\"ngModel\\\" [(ngModel)] = \\\"userService.selectedUser.email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" \\nrequired [pattern]=\\\"emailRegemailRegexex\\\" [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !email.valid}\\\">\\n<div  *ng If=\\\"signUpForm.submitted && email.errors\\\" >\\n  <label *ngIf=\\\"email.errors.required\\\" class=\\\"validation-message\\\">This Field is Required</label>\\n  <label *ngIf=\\\"email.errors.pattern\\\" class=\\\"validation-message\\\">Invalid email address.</label>\\n</div>\\n<input type=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\n  minlength=\\\"4\\\" required [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !password.valid }\\\">\\n  <div *ngIf=\\\"signUpForm.submitted && password.errors\\\">\\n    <label *ngIf=\\\"password.errors.required\\\" class=\\\"validation-message\\\">This field is required.</label>\\n<label *ngIf=\\\"password.errors.minlength\\\" class=\\\"validation-message\\\">Enter atleast 4 characters.</label>\\n</div>\\n<input type=\\\"text\\\" #DOB=\\\"ngModel\\\" [(ngModel)] = \\\"userService.selectedUser.DOB\\\" name=\\\"Date Of Birth\\\" placeholder=\\\"Date Of Birth\\\"\\n required [ngClass] =\\\"{'invalid-textbox' :signUpForm.submitted && !DOB.valid}\\\">\\n<div *ngIf=\\\"signUpForm.submitted && DOB.valid\\\">\\n  \\n  </div>\\n<input type=\\\"text\\\" #Address=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.Address\\\" name=\\\"Address\\\" placeholder=\\\"Address\\\"\\nrequired [ngClass] =\\\"{'invalid-textbox' :signUpForm.submitted && !Address.valid}\\\">\\n  <div *ngIf=\\\"signUpForm.submitted && !Address.valid\\\">\\n    \\n</div>\\n<input type=\\\"text\\\" #ParentPhone1=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.ParentPhone1\\\" name=\\\"ParentPhone1\\\" placeholder=\\\"ParentPhone1\\\"\\n  required [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !ParentPhone1.valid }\\\">\\n  <div *ngIf=\\\"signUpForm.submitted && ParentPhone1.valid\\\">\\n    \\n</div>\\n<input type=\\\"text\\\" #ParentPhone2=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.ParentPhone2\\\" name=\\\"ParentPhone2\\\" placeholder=\\\"ParentPhone2\\\"\\n  required [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !ParentPhone2.valid }\\\">\\n  <div *ngIf=\\\"signUpForm.submitted && ParentPhone2.valid\\\">\\n    \\n</div>\\n<input type=\\\"submit\\\" value=\\\"Sign-Up\\\" >\\n</form>\\n\\n<!-- Success message -->\\n\\n<div class=\\\"success\\\" *ngIf=\\\"showSuccessMessage\\\">\\n   \\n  Saved successfully\\n</div>\\n  <!-- Error message -->\\n<div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\n    {{serverErrorMessages}}\\n  </div>\\n   \\n\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/shared/user.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n showSuccessMessage: boolean;\n serverErrorMessages: string;\n   emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  constructor(private userService: UserService) { }\n  \n  ngOnInit() { }\n\n  onSubmit(form: NgForm) {\n  this.userService.postUser(form.value).subscribe(\n    res => { \n      \n        this.showSuccessMessage = true;\n        setTimeout(() => this.showSuccessMessage = false, 6000) \n      this.resetForm(form)\n      \n     \n    } , \n    err => {\n    if(err.status === 422) {\n      this.serverErrorMessages = 'email or username already used'\n       this.serverErrorMessages = err.error.join('<br/>')\n    } \n    //  else \n    // this.serverErrorMessages = 'Something went wrong'\n    \n    }\n  )    } \n\n  resetForm(form: NgForm) {\n  this.userService.selectedUser = {\n    fullName: '',\n      email: '',\n      password: '',\n      DOB: '',\n    Address : '',\n  ParentPhone1 : '',\n  ParentPhone2 : '',\n \n  }\n  form.resetForm()\n  this.serverErrorMessages = '';\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div id=\\\"formContent\\\">\\n    <h2 class=\\\"underlineHover\\\"  routerLink=\\\"/login\\\"  routerLinkActive=\\\"active\\\"> Sign In </h2>\\n    <h2 class=\\\"underlineHover\\\"  routerLink=\\\"/signup\\\"  routerLinkActive=\\\"active\\\">Sign Up </h2>\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit() { \n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<table *ngIf = \\\"userDetails\\\" class=\\\"table-fill\\\" >\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a [routerLink]=\\\"['/studentdata']\\\" type=\\\"button btn-primary\\\">Studnet Data</a></li>\\n       </ul>\\n<thead>\\n  <tr>\\n    <th colspan=\\\"2\\\" class=\\\"text-center\\\" >User Profile</th>\\n  </tr>\\n</thead>\\n<tbody>\\n<tr>\\n  <td> First Name  </td>\\n  <td>{{userDetails.fullName.split(' ')[0]}}</td>\\n</tr>\\n<tr>\\n  <td>Last Name</td>\\n  <td>{{userDetails.fullName.split(' ')[1]}}</td>\\n</tr>\\n<tr>\\n<td>Email</td>\\n<td>{{userDetails.email}}</td>\\n</tr>\\n<tr>\\n  <td>Date Of Birth</td>\\n  <td>{{userDetails.DOB}}</td>\\n  </tr>\\n  <tr>\\n    <td>Address</td>\\n    <td>{{userDetails.Address}}</td>\\n    </tr>\\n    <tr>\\n      <td>Parent Phone Number</td>\\n      <td>{{userDetails.ParentPhone1}}</td>\\n      </tr>\\n      <tr>\\n        <td>Parent Phone Number2</td>\\n        <td>{{userDetails.ParentPhone2}}</td>\\n        </tr>\\n<tr>\\n<td colspan=\\\"2\\\" class=\\\"text-center\\\"  >\\n  <input type=\\\"button\\\" (click) =\\\"onLogout()\\\" value=\\\"Logout\\\"/>\\n</td>\\n</tr>\\n</tbody>\\n\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../shared/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-userprofile',\n  templateUrl: './userprofile.component.html',\n  styleUrls: ['./userprofile.component.css']\n})\nexport class UserprofileComponent implements OnInit {\n userDetails;\n  constructor(private user:UserService, private router: Router) { }\n\n  ngOnInit() {\n    this.user.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res['user']\n      },\n      err => {\n        console.log(err)\n      }\n    )\n   }\n\n   onLogout() {\n     this.user.delteToken();\n     this.router.navigate(['/login'])\n   }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl:'http://localhost:3000/api'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}